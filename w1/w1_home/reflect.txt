// Workshop 1
// Name: Woohyun Kim
// Student #: 122733157
// Course: OOP244 Fall 2018
// File: reflect.txt

1. What is a namespace? Explain its purpose
A namespace was not present in C. It is a declarative region that provides a scope to the identifiers (sets a scope for the contents of the namespace). The purpose of a namespace is to organize code so that similar code is grouped up. By grouping, the namespace helps avoid naming confnlicts.

2. Why are header files needed? Explain
Header files include the prototypes (function declarations), which eliminates the need for them to be declared again for the function definitions in the .cpp file(s). This is not much of a redundancy issue when the header file is only needed to be included in one .cpp file, but if 10 different files need to include the code included in the header file, the readability, writing efficiency, and the compilation time could be improved.

3. In the instructions above, you were directed to compile only .cpp files but not the .h files. Explain why you don't compile header files
Header files do not need to be compiled, since the preprocessor directive includes the header file into the cpp file.

4. Explain why you should never include .cpp files in another file
Just as header files do not need to be compiled separately since they are included by a directive, the .cpp files do not need to be included since they will be compiled anyways. Ignoring this will lead to multiple identical definitions of functions in the .cpp file being included.

5. Explain in your own words what have you learned on this workshop
- Utilizing namespace as a "wrapper", and while everything was under the same namespace in this workshop, learning the syntax for doing so.
- Some difference in synax between C and C++
    - cin and cout with << or >> instead of printf and scanf